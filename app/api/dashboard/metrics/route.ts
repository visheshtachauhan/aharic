import { NextResponse } from 'next/server'; import { connectToDatabase } from '@/lib/mongodb'; export async function GET() { try { const db = await connectToDatabase(); const [totalTables, activeOrders, todaySales, todayBookings] = await Promise.all([ db.collection('tables').countDocuments(), db.collection('orders').countDocuments({ status: 'active' }), db.collection('orders').aggregate([{ $match: { createdAt: { $gte: new Date(new Date().setHours(0, 0, 0, 0)) } } }, { $group: { _id: null, total: { $sum: '$total' } } }]).toArray(), db.collection('bookings').countDocuments({ date: { $gte: new Date(new Date().setHours(0, 0, 0, 0)) } }), ]); const yesterdaySales = await db.collection('orders').aggregate([{ $match: { createdAt: { $gte: new Date(new Date().setDate(new Date().getDate() - 1)), $lt: new Date(new Date().setHours(0, 0, 0, 0)) } } }, { $group: { _id: null, total: { $sum: '$total' } } }]).toArray(); const todayTotal = todaySales[0]?.total || 0; const yesterdayTotal = yesterdaySales[0]?.total || 0; const salesGrowth = yesterdayTotal === 0 ? 100 : ((todayTotal - yesterdayTotal) / yesterdayTotal) * 100; return NextResponse.json({ totalTables, activeOrders, todaySales: todayTotal, todayBookings, salesGrowth }); } catch (error) { console.error('Error fetching metrics:', error); return NextResponse.json({ error: 'Failed to fetch metrics' }, { status: 500 }); } }
